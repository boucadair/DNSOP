<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-reddy-dnsop-error-page-03"
     ipr="trust200902">
  <front>
    <title abbrev="DNS Access Denied Error Page">DNS Access Denied Error
    page</title>

    <author fullname="Tirumaleswar Reddy" initials="T." surname="Reddy">
      <organization abbrev="McAfee">McAfee, Inc.</organization>

      <address>
        <postal>
          <street>Embassy Golf Link Business Park</street>

          <city>Bangalore</city>

          <region>Karnataka</region>

          <code>560071</code>

          <country>India</country>
        </postal>

        <email>kondtir@gmail.com</email>
      </address>
    </author>

    <author fullname="Neil Cook" initials="N." surname="Cook">
      <organization>Open-Xchange</organization>

      <address>
        <postal>
          <street></street>

          <country>UK</country>
        </postal>

        <email>neil.cook@noware.co.uk</email>
      </address>
    </author>

    <author fullname="Dan Wing" initials="D." surname="Wing">
      <organization abbrev="Citrix">Citrix Systems, Inc.</organization>

      <address>
        <postal>
          <street></street>

          <country>USA</country>
        </postal>

        <email>dwing-ietf@fuggles.com</email>
      </address>
    </author>

    <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
      <organization>Orange</organization>

      <address>
        <postal>
          <street></street>

          <city>Rennes</city>

          <code>35000</code>

          <country>France</country>
        </postal>

        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <date />

    <workgroup>DNSOP WG</workgroup>

    <abstract>
      <t>When a DNS server filters a query the response conveys no detailed
      explanation of why the query was blocked, leading to end-user confusion.
      This document defines a method to return an URL that explains the reason
      the DNS query was filtered.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="intro" title="Introduction">
      <t>DNS filters are deployed for a variety of reasons including endpoint
      security, parental filtering, and filtering required by law enforcement.
      These are discussed in more detail below:</t>

      <t><list style="symbols">
          <t>Various network security services are provided by Enterprise
          networks to protect endpoints (e.g., Hosts including IoT devices).
          Network-based security solutions such as firewalls and Intrusion
          Prevention Systems (IPS) rely on network traffic inspection to
          implement perimeter-based security policies. The network security
          services may, for example, prevent malware download, block known
          malicious domains, block phishing sites, etc. These network security
          services act on DNS queries originating from endpoints. For example,
          DNS firewalls, a method of expressing DNS response policy
          information inside specially constructed DNS zones, known as
          Response Policy Zones (RPZs) allows DNS servers to modify DNS
          responses in real time to stop access to malware and phishing
          domains. Note that some of the commonly known types of malware are
          viruses, worms, trojans, bots, ransomware, backdoors, spyware, and
          adware.</t>

          <t>Network devices in a home network offer network security to
          protect the devices connected to the home network by performing
          DNS-based content filtering. The network security service may, for
          example, block access to specific domains to enforce parental
          control, block access to malware sites, etc.</t>

          <t>ISPs typically block access to some domains due to a requirement
          imposed by an external entity (e.g., Law Enforcement Agency) by
          performing DNS-based content filtering.</t>
        </list></t>

      <t>DNS responses can be filtered by sending a bogus ("forged") A or AAAA
      response, NXDOMAIN error or empty answer, or an extended error code
      defined in <xref target="I-D.ietf-dnsop-extended-error"></xref>. Each of
      these have advantages and disadvantages, discussed below:</t>

      <t><list style="numbers">
          <t>The DNS response is forged providing IP addresses that points to
          a HTTP(S) server alerting the end user of the reason for blocking
          access to the domain (e.g., malware). When a HTTP(S) enabled domain
          name is blocked, the network security device presents a block page
          instead of the HTTP response from the content provider. If an HTTP
          enabled domain name is blocked, the network security device
          intercepts the HTTP request and returns a block page over HTTP. If
          an HTTPS enabled domain is blocked, the block page is also served
          over HTTPS. In order to return a block page over HTTPS, man in the
          middle (MITM) is enabled on endpoints by generating a local root
          certificate and an accompanying (local) public/private key pair. The
          local root certificate is installed on the endpoint, and the network
          security device(s) store a copy of the private key. During the TLS
          handshake, the network security device modifies the certificate
          provided by the server and (re)signs it with the private key from
          the local root certificate. <list style="symbols">
              <t>However, configuring the local root certificate on endpoints
              is not viable option in several deployments like Home networks,
              Schools, Small Office/Home Office (SOHO), and Small/ Medium
              Enterprise (SME). In these cases, the typical behavior is that
              the forged DNS response directs the user towards a server hosted
              to display the block page which breaks the TLS connection. For
              web-browsing this then results in an HTTPS certificate error
              message indicating that a secure connection could not be
              established, which gives no information to the end-user about
              the reason for the error. The typical errors are "The security
              certificate presented by this website was not issued by a
              trusted certificate authority" (Internet Explorer/Edge"), "The
              site's security certificate is not trusted" (Chrome), "This
              Connection is Untrusted" (Firefox), &ldquo;Safari can't verify
              the identity of the website&hellip;&rdquo; (Safari on
              MacOS)".</t>

              <t>Enterprise networks do not assume that all the devices
              connected to their network are managed by the IT team or Mobile
              Device Management (MDM) devices, especially in the quite common
              BYOD ("Bring Your Own Device") scenario. In addition, the local
              root certificate cannot be installed on IoT devices without a
              device management tool.</t>

              <t>An end user does not know why the connection was reset and,
              consequently, may repeatedly try to unsuccessfully reach the
              domain. Frustrated, the end user may use insecure interfaces to
              reach the domain, potentially compromising both security and
              privacy. Furthermore, certificate errors train users to click
              through certificate errors, which is poor security practice. To
              eliminate the need for an end user to click through certificate
              errors, an end user may manually install a local root
              certificate <xref target="Chrome-Install-Cert"></xref> on a host
              device. Doing so, however, is also poor security practice as it
              creates a security vulnerability that may be exploited by a MITM
              attack. When the manually installed local root certificate
              expires, the user has to (again) manually install the new local
              root certificate.</t>
            </list></t>

          <t>The DNS response is forged to provide a NXDOMAIN response to
          cause the DNS lookup to terminate in failure. In this case, an end
          user does not know why the domain cannot be reached, and may
          repeatedly try to unsuccessfully reach the domain. Frustrated, the
          end user may use insecure interfaces to reach the domain,
          potentially compromising both security and privacy.</t>

          <t>The extended error codes Blocked, Censored, and Filtered defined
          in <xref target="I-D.ietf-dnsop-extended-error"></xref> can be
          returned by the DNS server to provide additional information about
          the cause of an DNS error. If the extended error code "Forged
          answer" defined in <xref
          target="I-D.ietf-dnsop-extended-error"></xref> is returned by the
          DNS server, the client can identify the DNS response is forged and
          the reason for HTTPS certificate error. These extended error codes
          do not suffer from the limitations discussed in (1) and (2) but the
          user still does not know the exact reason nor the user is aware of
          the exact entity blocking the access to the domain. For example, a
          DNS server may block access domain based on the content category
          like "Adult Content" to enforce parental control, "Violence &amp;
          Terrorism" due to an external requirement imposed by an external
          entity (e.g., Law Enforcement Agency), etc. The content categories
          for domains cannot be standardized because the classification of
          domains into content categories is vendor specific, typically ranges
          from 40 to 100 types of categories depending on the vendor and the
          categories keep evolving. Further, the threat data used to
          categorize domains may sometimes mis-classify domains (e.g., Domains
          wrongly classified as DGA (Domain Generation Algorithm) by deep
          learning techniques, domain wrongly classified as phishing due to
          crowd sourcing, new domains not categorized by the threat data,
          etc.). The end user needs to know the contact details of the
          IT/InfoSec team to raise a complaint.</t>
        </list></t>

      <t>No matter which type of response is generated (forged IP address,
      NXDOMAIN or empty answer, or an extended error code), the user who
      generated the query has little chance to understand which entity
      filtered the query, how to report a mistake in the filter, or why the
      entity filtered it at all. This document describes a mechanism to
      provide a URL which, when accessed, provides such information to the
      user.</t>

      <t>One of the other benefits of this document is eliminating the need to
      "spoof" block pages for HTTPS resources, as the block page no longer
      needs to create a signed certificate when blocking a destination. This
      avoids the need to install an local root certificate authority on those
      IT-managed devices.</t>
    </section>

    <section anchor="notation" title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in BCP 14
      <xref target="RFC2119"></xref><xref target="RFC8174"></xref> when, and
      only when, they appear in all capitals, as shown here.</t>

      <t>This document makes use of the terms defined in <xref
      target="RFC8499"></xref> and <xref
      target="I-D.ietf-dnsop-terminology-ter"></xref>.</t>

      <t>'Encrypted DNS' refers to DNS-over-HTTPS, DNS-over-TLS, or
      DNS-over-QUIC</t>
    </section>

    <section title="Error page URL EDNS0 option format">
      <t>This draft uses an EDNS0 (<xref target="RFC6891"></xref>) option to
      include the URL that gives additional information about the cause of
      blocking access to a domain in a DNS response. The option is structured
      as follows:</t>

      <figure>
        <artwork align="left"><![CDATA[
                                             1   1   1   1   1   1
     0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                            OPTION-CODE                        |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   |                           OPTION-LENGTH                       |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | ERROR-PAGE-URL-LENGTH  (fixed size)                           |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   / ERROR-PAGE-URL (variable size)                                |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   | ERROR-PAGE-SIG-ALG (fixed size)                               |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   / ERROR-PAGE-SIG  (variable size)                               |
   +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork>
      </figure>

      <t></t>

      <t>Field definition details:</t>

      <t><list style="symbols">
          <t>OPTION-CODE, 2-octets/16-bits (defined in <xref
          target="RFC6891"></xref>) for Error page URL, value is TBD. [RFC
          Editor: change TBD to the proper code once assigned by IANA.]</t>

          <t>OPTION-LENGTH, 2-octets/16-bits (defined in <xref
          target="RFC6891"></xref>) contains the length of the payload
          (everything after OPTION-LENGTH) in octets. The variability of the
          option length stems from the variable-length ERROR-PAGE-URL and
          ERROR-PAGE-SIG fields.</t>

          <t>ERROR-PAGE-URL-LENGTH, 2-octets/16-bits representing the length
          of ERROR-PAGE-URL. It MUST NOT be set to 0.</t>

          <t>ERROR-PAGE-URL, a variable length UTF-8 encoded <xref
          target="RFC5198"></xref> text field containing the URL that gives
          additional information about the cause of blocking access to a
          domain. The ERROR-PAGE-URL field MUST NOT be zero octets in
          length.</t>

          <t>ERROR-PAGE-SIG-ALG, 16-bits, which is the signature algorithm
          used to generate the signature for the Error page URL. The values
          are defined in the <xref target="DNSKEY-IANA">Domain Name System
          Security (DNSSEC) Algorithm Numbers </xref> with limitations
          described in <xref target="signandverify"></xref>.</t>

          <t>ERROR-PAGE-SIG, a variable length field containing the signature
          of the Error page URL. The signature generation process is discussed
          in <xref target="signandverify"></xref>.</t>
        </list></t>

      <t>The Error page URL option MUST only be included in error responses
      SERVFAIL, NXDOMAIN or REFUSED to a query that included the OPT Pseudo-RR
      <xref target="RFC6891"></xref>.</t>

      <t>An example is illustrated below:</t>

      <t>If the URI template is
      "https://block.example.net/block-page={target-domain}" for the HTTPS
      server returning the error page and access to the target domain
      "example.com" is blocked by the encrypted DNS server, the encrypted DNS
      server replaces the string "{target-domain}" in the template with the
      base64url-encoded target domain <xref target="RFC4648"></xref>. In the
      above example, the error page URL will be
      "https://block.example.net/block-page=ZXhhbXBsZS5jb20".</t>
    </section>

    <section title="Error page URL Processing">
      <t>The DNS client MUST follow the following rules to process the Error
      page URL EDNS0 option:<list style="symbols">
          <t>The Error page URL EDNS0 option is susceptible to forgery. In
          order to defend against this attack the DNS client MUST NOT process
          the DNS response with Error page URL EDNS0 option unless DNS
          messages exchanged are cryptographically protected using encrypted
          DNS.</t>

          <t>If an DNS client has enabled opportunistic privacy profile
          (Section 5 of <xref target="RFC8310"></xref>) for DoT, the DNS
          client will either fallback to an encrypted connection without
          authenticating the DNS server provided by the local network or
          fallback to clear text DNS, and cannot exchange encrypted DNS
          messages. The fallback adversely impacts security and privacy. If
          the DNS client has enabled opportunistic privacy profile for DoT,
          the client MUST NOT process the DNS response with Error page URL
          EDNS0 option.</t>

          <t>If an DNS client has enabled strict privacy profile (Section 5 of
          <xref target="RFC8310"></xref>) for DoT, the DNS client requires an
          encrypted connection and successful authentication of the DNS
          server; this mitigates both passive eavesdropping and client
          redirection (at the expense of providing no DNS service if an
          encrypted, authenticated connection is not available). If the DNS
          client has enabled strict privacy profile for DoT, the client can
          process the DNS response with Error page URL EDNS0 option. Note that
          the strict and opportunistic privacy profiles as defined in <xref
          target="RFC8310"></xref> only applies to DoT protocol, there has
          been no such distinction made for DoH protocol.</t>

          <t>If the DNS response contains more than one Error page URL EDNS0
          option, the DNS client MUST use only the first ocurrence.</t>

          <t>The Error page URL EDNS0 option MUST be processed by the DNS
          client for a "Censored", "Blocked" or "Filtered" extended error
          codes and MUST be ignored for any other type of extended DNS error
          code. When "Censored", "Blocked" or "Filtered" extended error code
          is returned in conjunction with an Error page URL EDNS0 option, any
          other resource records in the answer MUST be ignored by clients
          supporting this specification.</t>

          <t>If the encrypted DNS server does not offer DNS filtering service
          (e.g., prevent access to malware sites or objectionable content
          (e.g., legal obligation)), the DNS client MUST reject the Error page
          URL EDNS0 option. The mechanism discussed in <xref
          target="I-D.reddy-add-server-policy-selection"></xref> can be used
          by the DNS client to assess whether the encrypted DNS server
          performs DNS-based content filtering.</t>

          <t>If the value of the variable in the error page URL does not match
          the original QNAME in the DNS request, the DNS client MUST reject
          the Error page URL EDNS0 option.</t>

          <t>If the Error page URL EDNS0 option is included in a NOERROR RCODE
          message, the DNS client MUST reject the Error page URL EDNS0
          option.</t>

          <t>The DNS client MUST reject the error page URL if the scheme is
          not "https". The HTTPS client retrieving the error page MUST verify
          the entire certification path per <xref target="RFC5280"></xref>.
          The HTTPS client additionally uses validation techniques as
          described in <xref target="RFC6125"></xref> to compare the domain
          name in the error page URL to the server certificate provided in TLS
          handshake. See <xref target="RFC7525"></xref> for additional TLS
          recommendations. </t>

          <t>The DNS client verifies the signature in the ERROR-PAGE-SIG field
          following the mechanism discussed in <xref
          target="signandverify"></xref>. If the signature is valid, the
          client can positively identify that the Error page URL EDNS0 option
          has been generated by the encrypted DNS server and the encrypted DNS
          server did not forward the Error Page URL EDNS0 option from an
          upstream resolver. If signature validation fails, the DNS client
          MUST reject the Error page URL EDNS0 option.</t>
        </list>When an encrypted DNS resolver receives an Error page URL EDNS0
      option, the resolver MUST NOT forward the Error Page URL EDNS0 option
      from an upstream resolver as an attacker (e.g., MiTM) could insert a
      fake Error Page URL EDNS0 option into the DNS response.</t>

      <t>The agent acting as HTTPS client on the endpoint uses the URL as
      given by the encrypted DNS server in an HTTP GET request to retrieve the
      error page. HTTP/2 <xref target="RFC7540"></xref> is the minimum
      RECOMMENDED version of HTTP to use to retrieve the error page.</t>
    </section>

    <section anchor="signandverify" title="Sign and Verify">
      <t>The signature algorithms for generating signature for DNS resource
      record sets (RRsets) are defined in <xref target="DNSKEY-IANA"></xref>.
      The "mandatory-to-implement" algorithms are defined in <xref
      target="RFC8624"></xref> are RSA, ECDSA and EdDSA. Along similar lines,
      the encrypted DNS server's end-entity certificate's public key and the
      algorithm with which the key can be used are RSA, ECDSA and EdDSA <xref
      target="RFC8446"></xref>. If ECDSA is used, it is RECOMMENDED to use the
      deterministic digital signature generation procedure of the Elliptic
      Curve Digital Signature Algorithm (ECDSA), specified in <xref
      target="RFC6979"></xref>.</t>

      <t>The signature is generated by the encrypted DNS server using the
      Error page URL, private key of the encrypted DNS server's end-entity
      certificate as inputs to the signature algorithm. The signature
      algorithm in the ERROR-PAGE-SIG-ALG field MUST match the algorithm with
      which the public key is used in the subjectPublicKeyInfo field in the
      encrypted DNS server's X.509 end-entity certificate. </t>

      <t>If the signature algorithm in the ERROR-PAGE-SIG-ALG field does not
      match the algorithm in the subjectPublicKeyInfo field in the encrypted
      DNS server's X.509 end-entity certificate in the TLS handshake of the
      encrypted DNS session, the DNS client MUST reject the Error page URL
      EDNS0 option. The DNS client verifies the signature using the signature
      in ERROR-PAGE-SIG-ALG field, error page URL and encrypted DNS server's
      end-entity certificate's public key in the TLS handshake of encrypted
      DNS session as inputs to the signature algorithm. For example, if
      Ed25519 is used, Ed25519 signature algorithm and verification of the
      Ed25519 signature are described in Sections 5.1.6 and 5.1.7 of <xref
      target="RFC8032"></xref>, respectively.</t>
    </section>

    <section title="ERROR Page">
      <t>The following text outlines the RECOMMENDED contents of an error page
      to assist the operator developing the error page.</t>

      <t><list style="symbols">
          <t>The exact reason for blocking access to the domain. If the domain
          is blocked based on some threat data, the threat type associated
          with the blocked domain can be provided/displayed to the end user.
          For example, the reason can indicate the type of malware blocked
          like spyware and the damage it can do the security and privacy of
          the user.</t>

          <t>The domain name blocked.</t>

          <t>If query was blocked by regulation, a pointer to a regulatory
          text that mandates this query block.</t>

          <t>The entity (or organization) blocking the access to the domain
          and contact details of the IT/InfoSec team to raise a complaint.</t>

          <t>The blocked error page to not include Ads and dynamic
          content.</t>
        </list>The content of the error page discussed above is non-normative,
      the above text only provides the guidelines and template for the error
      page and.<list style="symbols">
          <t>Does not attempt to offer an exhaustive list for the contents of
          an error page.</t>

          <t>It is not intended to form the basis of any legal/compliance for
          developing the error page.</t>
        </list></t>
    </section>

    <section title="Usability Considerations">
      <t>The error page SHOULD be returned in the user's preferred language as
      expressed by the Accept-Language header. If the error page is displayed
      in a language not known to the end user and assuming
      Internationalization features failed, browser extensions to translate to
      user's native language can be used. For example, "Google Translate"
      extension <xref target="Chrome-Translate"></xref> provided by Google on
      Chrome can be used by the user to translate the error page. The "Google
      Translate" extension automatically detects whether the language of a
      page is different from the language the user has selected. If it is in a
      different language, a banner appears at the top of the page. The user
      can click on the Translate button in the banner to have all the text on
      the page appear in the language selected by the user.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Security considerations in <xref
      target="I-D.ietf-dnsop-extended-error"></xref> and <xref
      target="RFC8624"></xref> need to be taken into consideration.</t>

      <t>The Error page URL EDNS0 option causes an HTTPS retrieval by the
      client. To prevent forgery of the Error page URL EDNS0 option, this
      specification requires it only be sent only over an encrypted DNS
      channel with an authorized DNS server.</t>

      <t>The DNS client can learn the filtering capability of an encrypted DNS
      server using <xref
      target="I-D.reddy-add-server-policy-selection"></xref>. <xref
      target="I-D.reddy-add-server-policy-selection"></xref> also discusses
      how a DNS client can authenticate it is connecting to an encrypted DNS
      server hosted by a specific organization (e.g., ISP). This information
      is cryptographically signed to attest its authenticity. It is
      particularly useful when the encrypted DNS server is insecurely
      discovered and prevents the client from connecting to an attacker's
      encrypted DNS server.</t>

      <t>To reduce threat surface when retrieving the Error page URL over
      HTTP, the client SHOULD perform the retrieval using an isolated
      environment. Such isolation should prevent transmitting cookies, block
      JavaScript, block auto-fill of credentials or personal information, and
      be isolated from the user's normal environment. Browsers perform some of
      these limitations today when accessing captive portals <xref
      target="Safari-Cookie"></xref>, during private browsing, or using
      containerization <xref target="Facebook-Container"></xref>).</t>

      <t>The encrypted DNS session provides transport security for the
      interaction between the DNS client and server, but DNSSEC signing and
      validation is not possible for the Error Page URL EDNS0 option returning
      the error page URL. For example, if access to a doman is blocked, the
      encrypted DNS resolver can rewrite the response to send NXDOMAIN error
      and Error page URL EDNS0 option in the DNS response, it will omit DNSSEC
      RRsets, because the modified responses cannot be verified by DNSSEC
      signatures. However, the signature in the Error Page URL EDNS0 option
      provides data origin authentication of the Error Page URL EDNS0 option.
      This is also intended to allow the DNS client to distinguish between
      servers that do not implement Error page URL EDNS0 option and is useful
      to detect Error page URL EDNS0 option insertion attack by an MiTM in the
      path between the encrypted DNS resolver and authoritative servers.
      Nevertheless, the Error Page URL EDNS0 option returning the error page
      URL should be treated only as diagnostic information and MUST NOT alter
      DNS protocol processing.</t>

      <t>By design, the object referenced by the error page URL potentially
      exposes additional information about the DNS resolution process that may
      leak information. An example of this is the reason for blocking the
      access to the domain name and the entity blocking access to the
      domain.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <section title="A New Error Page URL EDNS Option">
        <t>This document defines a new EDNS(0) option, entitled "Error Page
        URL", assigned a value of TBD from the "DNS EDNS0 Option Codes (OPT)"
        registry [to be removed upon publication:
        [http://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11]</t>

        <t><figure>
            <artwork><![CDATA[Value  Name                 Status    Reference
-----  ----------------     ------    ------------------
 TBD   Error Page URL      Standard       [ This document ]]]></artwork>
          </figure></t>
      </section>
    </section>

    <section title="Acknowledgements">
      <t>Thanks to Vittorio Bertola, Wes Hardaker, Ben Schwartz, Erid Orth,
      Viktor Dukhovni and Bob Harold for the comments.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
      <?rfc include='reference.RFC.2119'?>

      <?rfc include='reference.RFC.8174'?>

      <?rfc include='reference.RFC.4648'?>

      <?rfc include='reference.RFC.7540'?>

      <?rfc include='reference.RFC.6891'?>

      <?rfc include='reference.RFC.8310'?>

      <?rfc include='reference.RFC.8624'?>

      <?rfc include='reference.RFC.5198'?>

      <?rfc include='reference.RFC.8446'?>

      <?rfc include='reference.RFC.6979'?>

      <?rfc include='reference.RFC.5280'?>

      <?rfc include='reference.RFC.6125'?>

      <?rfc include='reference.RFC.7525'?>

      <?rfc include='reference.I-D.ietf-dnsop-extended-error' ?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.RFC.8499'?>

      <?rfc include='reference.RFC.8484'?>

      <?rfc include='reference.RFC.7858'?>

      <?rfc include='reference.RFC.8032'?>

      <?rfc include='reference.I-D.reddy-add-server-policy-selection'?>

      <?rfc include='reference.I-D.ietf-dnsop-terminology-ter'?>

      <reference anchor="Chrome-Install-Cert"
                 target="support.securly.com/hc/en-us/articles/206081828-How-to-manually-install-the-Securly-SSL-certificate-in-Chrome">
        <front>
          <title>How to manually install the Securly SSL certificate in
          Chrome</title>

          <author></author>

          <date day="" month="" year="" />
        </front>
      </reference>

      <reference anchor="Chrome-Translate"
                 target="https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb/RK%3D2/RS%3DBBFW_pnWkPY0xPMYsAZI5xOgQEE-">
        <front>
          <title>Google Translate</title>

          <author></author>

          <date day="" month="" year="" />
        </front>
      </reference>

      <reference anchor="Facebook-Container"
                 target="https://www.mozilla.org/en-US/firefox/facebookcontainer/">
        <front>
          <title>Facebook container for Firefox</title>

          <author></author>

          <date day="" month="" year="" />
        </front>
      </reference>

      <reference anchor="Safari-Cookie"
                 target="https://support.apple.com/en-us/HT205732">
        <front>
          <title>Isolated cookie store (CVE-2016-1730)</title>

          <author></author>

          <date day="" month="" year="" />
        </front>
      </reference>

      <reference anchor="DNSKEY-IANA"
                 target="http://www.iana.org/assignments/dns-sec-alg-numbers">
        <front>
          <title>IANA, Domain Name System Security (DNSSEC) Algorithm
          Numbers</title>

          <author></author>

          <date day="" month="" year="" />
        </front>
      </reference>
    </references>
  </back>
</rfc>
